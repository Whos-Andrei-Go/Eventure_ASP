@model Eventure_ASP.Models.ProfileViewModel
@inject Eventure_ASP.Utilities.Session Session // Inject the Session utility

<div class="event-history">
    <h1 class="display-4">EVENT HISTORY</h1>
    <div class="event-cards">
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            var currentUser = Session.GetCurrentUser(); // Get the current user object
            if (currentUser != null)
            {
                var addedEventIds = new HashSet<int>();
                bool hasEvents = false; // Flag to check if any events are added

                foreach (var ticket in Model.Tickets)
                {
                    // Check if the ticket belongs to the current user
                    if (ticket.UserId == currentUser.Id) // Assuming UserId is a property of Ticket
                    {
                        // Access the TicketType to get the EventId
                        var ticketType = ticket.TicketType; // This is the TicketType associated with the Ticket
                        if (ticketType != null)
                        {
                            var eventDetails = Model.Events.FirstOrDefault(e => e.Id == ticketType.EventId); // Get the event using EventId

                            if (eventDetails != null && !addedEventIds.Contains(eventDetails.Id))
                            {
                                var eventStartTime = eventDetails.StartTime; // Assuming StartTime is a DateTime?
                                if (eventStartTime.HasValue && eventStartTime.Value < DateTime.Now)
                                {
                                    hasEvents = true; // Set flag to true if an event is added
                                    <div class="event-card">
                                        <a href="@Url.Action("ReturnView", "Event", new { eventId = eventDetails.Id })" class="event-card">
                                            <h3 class="event-name">@eventDetails.Name</h3>
                                            <p>
                                                @if (eventDetails.StartTime.HasValue)
                                                {
                                                    @eventDetails.StartTime.Value.ToString("yyyy-MM-dd HH:mm")
                                                }
                                                else
                                                {
                                                    <span>Start time not available</span>
                                                }
                                            </p>
                                            <p>Location: @eventDetails.Location</p>
                                            <p>Organizer: @eventDetails.Creator?.Username</p>
                                        </a>
                                    </div>
                                    addedEventIds.Add(eventDetails.Id);
                                }
                            }
                        }
                    }
                }

                // Check if any events were added
                if (!hasEvents)
                {
                    <p>No past events found for your tickets.</p>
                    ;
                }
            }
            else
            {
                <p>No user is currently logged in.</p>
            }
        }
        else
        {
            <p>No tickets found.</p>
        }
    </div>
</div>