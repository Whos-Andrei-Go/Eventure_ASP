@model Eventure_ASP.Models.ProfileViewModel

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<h1 class="header">PAYMENT METHODS</h1>

<form asp-action="UpdatePaymentMethod" method="post">
    <div class="form-group">
        <input type="hidden" id="selectedPaymentMethodIdHidden" name="SelectedPaymentMethodId" value="@Model.SelectedPaymentMethodId" />
        <label for="paymentMethodSelect">Method:</label>
        <select id="paymentMethodSelect" class="form-control" onchange="updateFields()">
            <option value="">Select a Payment Method</option>
            @foreach (var method in Model.PaymentMethods)
            {
                <option value="@method.Id"
                        data-accountnumber="@method.AccountNumber"
                        data-expirationdate="@(method.ExpirationDate.HasValue ? method.ExpirationDate.Value.ToString("MM/yyyy") : "")"
                        data-isdefault="@method.IsDefault">@method.PaymentType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="accountNumber">Account Number:</label>
        <input type="text" id="accountNumber" name="AccountNumber" class="form-control" value="" />
    </div>

    <div class="form-group">
        <label for="expirationDate">Expiration Date:</label>
        <input type="text" id="expirationDate" name="ExpirationDate" class="form-control" placeholder="MM/yyyy" value="" />
    </div>

    <div class="form-group form-check">
        <input type="hidden" id = "isDefaultHidden" name="IsDefault" value="False" />
        <input type="checkbox" id="isDefault" class="form-check-input" />
        <label for="isDefault" class="form-check-label">Default Payment Method</label>
    </div>

    <div class="button-group">
        <button type="button" class="btn btn-danger" onclick="deletePaymentMethod()">Delete Payment Method</button>
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addPaymentMethodModal">Add New Payment Method</button>
        <button type="submit" class="btn btn-primary float-end">Update Payment Method</button>
    </div>
</form>

<!-- Modal for Adding Payment Method -->
<div class="modal fade" id="addPaymentMethodModal" tabindex="-1" role="dialog" aria-labelledby="addPaymentMethodModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addPaymentMethodModalLabel">Add Payment Method</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addPaymentMethodForm">
                    <div class="form-group">
                        <label for="newPaymentType">Payment Type:</label>
                        <input type="text" id="newPaymentType" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="newAccountNumber">Account Number:</label>
                        <input type="text" id="newAccountNumber" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="newExpirationDate">Expiration Date (MM/yyyy):</label>
                        <input type="text" id="newExpirationDate" class="form-control" placeholder="MM/yyyy" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addPaymentMethodButton" onclick="addPaymentMethod()">Add Payment Method</button>
            </div>
        </div>
    </div>
</div>

<script>
    var checkbox = document.getElementById("isDefault");
    var hiddenInput = document.getElementById("isDefaultHidden");

    checkbox.addEventListener("change", function() {
        hiddenInput.value = checkbox.checked ? "True" : "False";
    });

    function updateFields() {
        var paymentMethodSelect = document.getElementById("paymentMethodSelect");
        var selectedOption = paymentMethodSelect.options[paymentMethodSelect.selectedIndex];

        if (selectedOption.value) {
            var accountNumber = selectedOption.getAttribute("data-accountnumber");
            var expirationDate = selectedOption.getAttribute("data-expirationdate");
            var isDefault = selectedOption.getAttribute("data-isdefault") === "True";

            document.getElementById("accountNumber").value = accountNumber;
            document.getElementById("expirationDate").value = expirationDate;
            document.getElementById("isDefault").checked = isDefault;
            document.getElementById("isDefaultHidden").value = isDefault;
            document.getElementById("selectedPaymentMethodIdHidden").value = selectedOption.value;
        } else {
            document.getElementById("accountNumber").value = "";
            document.getElementById("expirationDate").value = "";
            document.getElementById("isDefault").checked = false;
            document.getElementById("isDefaultHidden").value = false;
            document.getElementById("selectedPaymentMethodIdHidden").value = 0;

            console.log("No payment method selected.");
        }
    }

    function deletePaymentMethod() {
        var paymentMethodSelect = document.getElementById("paymentMethodSelect");
        var selectedOption = paymentMethodSelect.options[paymentMethodSelect.selectedIndex];

        if (selectedOption.value) {
            var paymentMethodId = selectedOption.value;
            var deleteUrl = '@Url.Action("DeletePaymentMethod", "Profile")'; // Use the base URL for the delete action

            // Confirm deletion
            if (confirm("Are you sure you want to delete this payment method?")) {
                // Send AJAX request to delete the payment method
                $.ajax({
                    url: deleteUrl,
                    type: 'POST', // Use POST for deletion
                    data: { id: paymentMethodId }, // Send the ID of the payment method to delete
                    success: function(response) {
                        if (response.success) {
                            alert('Payment method deleted successfully.');
                            loadView('PaymentMethods'); // Refresh the payment methods view
                        } else {
                            alert('Error deleting payment method: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error deleting payment method.');
                    }
                });
            }
        } else {
            alert("Please select a payment method to delete.");
        }
    }

    function addPaymentMethod() {
        var paymentType = document.getElementById("newPaymentType").value;
        var accountNumber = document.getElementById("newAccountNumber").value;
        var expirationDate = document.getElementById("newExpirationDate").value;

        if (paymentType && accountNumber) {
            // Show confirmation alert
            var confirmationMessage = "Are you sure you want to add this payment method?\n" +
                                       "Payment Type: " + paymentType + "\n" +
                                       "Account Number: " + accountNumber + "\n" +
                                       "Expiration Date: " + expirationDate;

            if (confirm(confirmationMessage)) {
                // User confirmed, send the data to the server via AJAX
                $.ajax({
                    url: '@Url.Action("AddPaymentMethod", "Profile")', // Adjust the action and controller as needed
                    type: 'POST',
                    data: {
                        PaymentType: paymentType,
                        AccountNumber: accountNumber,
                        ExpirationDate: expirationDate
                    },
                    success: function(response) {
                        if (response.success) {
                            // Close the modal
                            $('#addPaymentMethodModal').modal('hide');
                            document.getElementById("addPaymentMethodForm").reset();

                            // Refresh the payment methods view
                            loadView('PaymentMethods'); // Assuming you have a method to reload the payment methods
                        } else {
                            alert('Error adding payment method: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error adding payment method.');
                    }
                });
            } else {
                // User canceled the action
                console.log("User  canceled the addition of the payment method.");
            }
        } else {
            alert("Please fill in all required fields.");
        }
    }
</script>