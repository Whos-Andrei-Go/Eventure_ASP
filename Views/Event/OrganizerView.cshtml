@model Eventure_ASP.Models.EventViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Eventure - Organizer Event</title>
    <link rel="stylesheet" href="~/css/event.css" />
   
</head>
<body>
    <div class="container">
        <h1 class="header">@Model.Event.Name</h1>

        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label for="eventName">Event Name:</label>
                    <input type="text" id="eventName" class="form-control" value="@Model.Event.Name" />
                </div>

                <div class="form-group">
                    <label for="eventLocation">Event Location:</label>
                    <input type="text" id="eventLocation" class="form-control" value="@Model.Event.Location" />
                </div>

                <div class="form-group">
                    <label for="eventDescription">Event Description:</label>
                    <textarea id="eventDescription" class="form-control">@Model.Event.Description</textarea>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label for="startDate">Event Start Date:</label>
                    <input type="date" id="startDate" class="form-control"
                           value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                </div>

                <div class="form-group">
                    <label for="startTime">Event Start Time:</label>
                    <input type="time" id="startTime" class="form-control"
                           value="@Model.StartTime.ToString("HH:mm")" />
                </div>

                <div class="form-group">
                    <label for="endDate">Event End Date:</label>
                    <input type="date" id="endDate" class="form-control"
                           value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                </div>

                <div class="form-group">
                    <label for="endTime">Event End Time:</label>
                    <input type="time" id="endTime" class="form-control"
                           value="@Model.EndTime.ToString("HH:mm")" />
                </div>
            </div>
        </div>

        <h2>Ticket Types</h2>
        <ul class="ticket-list">
            @if (Model.TicketTypes != null && Model.TicketTypes.Any())
            {
                foreach (var ticket in Model.TicketTypes)
                {
                    <li>
                        @ticket.Name - PHP @ticket.Price - Quantity: @ticket.Quantity
                        <button class="ml-6 btn-edit" data-id="@ticket.Id">Edit</button>
                    </li>
                }
            }
            else
            {
                <li>No ticket types available.</li>
            }
        </ul>

        <button class="btn-add" id="btnAddTicketType">Add Ticket Type</button>
        <button class="btn-save" id="btnSaveEvent">Save Event</button>
        <button class="btn-back" id="btnBack" onclick="window.history.back();">Back</button>
    </div>

    <script>
        document.getElementById('btnSaveEvent').addEventListener('click', function () {
            const eventData = {
                Name: document.getElementById('eventName').value,
                Location: document.getElementById('eventLocation').value,
                Description: document.getElementById('eventDescription').value,
                StartTime: new Date(document.getElementById('startDate').value + 'T' + document.getElementById('startTime').value),
                EndTime: new Date(document.getElementById('endDate').value + 'T' + document.getElementById('endTime').value)
            };

            fetch('/Event/SaveEvent', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(eventData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Event saved successfully!');
                    window.location.href = '/Event/Index'; // Redirect to the event index page
                } else {
                    alert('Failed to save event.');
                }
            })
            .catch(error => console.error('Error:', error));
        });
    </script>
</body>
</html>